# Generated by Django 5.0 on 2023-12-30 23:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang_code', models.CharField(choices=[('uz', "O'zbek"), ('ru', 'Русский'), ('en', 'English')], default='uz', max_length=2, verbose_name='Язык плаката')),
                ('fullname', models.EmailField(max_length=254, verbose_name='Полное имя сотрудника')),
                ('description', models.TextField(verbose_name='О сотруднике')),
                ('image', models.ImageField(upload_to='image/', verbose_name='Фото сотрудника')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудник',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True, verbose_name='Загаловок отзыва')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта отзывателя')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='Номер телефона отзывателя')),
                ('feedback', models.TextField(verbose_name='Текст отзыва')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время отзыва')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='HeaderNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang_code', models.CharField(choices=[('uz', "O'zbek"), ('ru', 'Русский'), ('en', 'English')], default='uz', max_length=2, verbose_name='Язык плаката')),
                ('first_header', models.TextField(verbose_name='Загаловок первой карточки')),
                ('first_text', models.TextField(verbose_name='Текст первой карточки')),
                ('second_header', models.TextField(verbose_name='Загаловок второй карточки')),
                ('second_text', models.TextField(verbose_name='Текст второй карточки')),
                ('image', models.ImageField(upload_to='image/', verbose_name='Фото плаката')),
                ('main_title', models.TextField(verbose_name='Загаловок плаката')),
            ],
            options={
                'verbose_name': 'Плакат',
                'verbose_name_plural': 'Плакаты',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang_code', models.CharField(choices=[('uz', "O'zbek"), ('ru', 'Русский'), ('en', 'English')], default='uz', max_length=2, verbose_name='Язык плаката')),
                ('image', models.ImageField(upload_to='image/', verbose_name='Фотография для новости')),
                ('text', models.TextField(verbose_name='Контент новости')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True, verbose_name='Имя спонсора')),
                ('image', models.ImageField(upload_to='image/', verbose_name='Фото спонсора')),
            ],
            options={
                'verbose_name': 'Спонсор',
                'verbose_name_plural': 'Спонсоры',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
